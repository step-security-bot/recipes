'use strict';class KeepAwake{#checkboxSelector='header nav form.md-header__option input#keepAwake';#screenLock=null;constructor(){if('wakeLock'in navigator){this.#createButton();}}#createButton(){$(()=>{$(`<form class="md-header__option">
				<input id="keepAwake" type="checkbox" />
				<label for="keepAwake">Keep Awake</label>
			</form>`).insertBefore($('header nav .md-header__option').first());$(this.#checkboxSelector).change(()=>{$(()=>{const ischecked=$(this.#checkboxSelector).prop('checked');if(ischecked){this.#lockScreen();}else{this.#unlockScreen();}});});});$(document).on('visibilitychange',()=>{if(this.#screenLock!==null&&document.visibilityState==='visible'){this.#lockScreen();}});}#lockScreen(){try{navigator.wakeLock.request('screen').then((lock)=>{this.#screenLock=lock;$(()=>{$(this.#checkboxSelector).prop('checked',true);});this.#screenLock.onrelease=()=>{$(()=>{$(this.#checkboxSelector).prop('checked',!this.#screenLock.released);if(this.#screenLock.released){this.#screenLock=null;}});};});}catch(error){console.error(error);this.#screenLock=null;$(()=>{$(this.#checkboxSelector).prop('checked',false);});}}#unlockScreen(){if(typeof this.#screenLock!=='undefined'&&this.#screenLock!=null){this.#screenLock.release();}}}
new KeepAwake();